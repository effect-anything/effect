(()=>{"use strict";var e={57:(e,o,r)=>{const t=r(468);const n=r(835);const l=r(759);const s=r(92);const c=require("@effect-x/deps/compiled/react-dev-utils/is-root");const i=r(504);const a=require("@effect-x/deps/compiled/react-dev-utils/clearConsole");const p=require("@effect-x/deps/compiled/react-dev-utils/getProcessForPort");const u=process.stdout.isTTY;function prepareUrls(e,o,r,s="/"){const formatUrl=o=>n.format({protocol:e,hostname:o,port:r,pathname:s});const prettyPrintUrl=o=>n.format({protocol:e,hostname:o,port:l.bold(r),pathname:s});const c=o==="0.0.0.0"||o==="::";let i,a,p;if(c){i="localhost";try{a=t.ip();if(a){if(/^10[.]|^172[.](1[6-9]|2[0-9]|3[0-1])[.]|^192[.]168[.]/.test(a)){p=prettyPrintUrl(a)}else{a=undefined}}}catch(e){}}else{i=o}const u=prettyPrintUrl(i);const d=formatUrl(i);return{lanUrlForConfig:a,lanUrlForTerminal:p,localUrlForTerminal:u,localUrlForBrowser:d}}function printInstructions(e,o,r){console.log();console.log(`You can now view ${l.bold(e)} in the browser.`);console.log();if(o.lanUrlForTerminal){console.log(`  ${l.bold("Local:")}            ${o.localUrlForTerminal}`);console.log(`  ${l.bold("On Your Network:")}  ${o.lanUrlForTerminal}`)}else{console.log(`  ${o.localUrlForTerminal}`)}console.log();console.log("Note that the development build is not optimized.");console.log(`To create a production build, use `+`${l.cyan(`${r?"yarn":"npm run"} build`)}.`);console.log()}function resolveLoopback(e){const o=n.URL(e);o.host=undefined;if(o.hostname!=="localhost"){return e}try{if(!t.ip()){o.hostname="127.0.0.1"}}catch(e){o.hostname="127.0.0.1"}return n.format(o)}function choosePort(e,o){return s(o,e).then((e=>new Promise((r=>{if(e===o){return r(e)}const t=process.platform!=="win32"&&o<1024&&!c()?`Admin permissions are required to run a server on a port below 1024.`:`Something is already running on port ${o}.`;if(u){a();const n=p(o);const s={type:"confirm",name:"shouldChangePort",message:l.yellow(t+`${n?` Probably:\n  ${n}`:""}`)+"\n\nWould you like to run the app on another port instead?",initial:true};i(s).then((o=>{if(o.shouldChangePort){r(e)}else{r(null)}}))}else{console.log(l.red(t));r(null)}}))),(o=>{throw new Error(l.red(`Could not find an open port at ${l.bold(e)}.`)+"\n"+("Network error message: "+o.message||0)+"\n")}))}e.exports={choosePort:choosePort,prepareUrls:prepareUrls}},468:e=>{e.exports=require("@effect-x/deps/compiled/address")},759:e=>{e.exports=require("@effect-x/deps/compiled/chalk")},92:e=>{e.exports=require("@effect-x/deps/compiled/detect-port-alt")},504:e=>{e.exports=require("@effect-x/deps/compiled/prompts")},835:e=>{e.exports=require("url")}};var o={};function __nccwpck_require__(r){var t=o[r];if(t!==undefined){return t.exports}var n=o[r]={exports:{}};var l=true;try{e[r](n,n.exports,__nccwpck_require__);l=false}finally{if(l)delete o[r]}return n.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var r=__nccwpck_require__(57);module.exports=r})();