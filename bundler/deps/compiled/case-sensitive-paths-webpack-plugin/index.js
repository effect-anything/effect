(()=>{"use strict";var e={973:(e,t,i)=>{const s=i(622);function CaseSensitivePathsPlugin(e){this.options=e||{};this.logger=this.options.logger||console;this.pathCache=new Map;this.reset()}CaseSensitivePathsPlugin.prototype.reset=function(){this.pathCache=new Map;this.fsOperations=0;this.primed=false};CaseSensitivePathsPlugin.prototype.getFilenamesInDir=function(e,t){const i=this;const s=this.compiler.inputFileSystem;this.fsOperations+=1;if(this.pathCache.has(e)){t(this.pathCache.get(e));return}if(this.options.debug){this.logger.log("[CaseSensitivePathsPlugin] Reading directory",e)}s.readdir(e,((s,n)=>{if(s){if(i.options.debug){this.logger.log("[CaseSensitivePathsPlugin] Failed to read directory",e,s)}t([]);return}t(n.map((e=>e.normalize?e.normalize("NFC"):e)))}))};CaseSensitivePathsPlugin.prototype.fileExistsWithCase=function(e,t){const i=this;const n=s.dirname(e);const o=s.basename(e);const a=s.parse(n);if(a.dir===a.root||n==="."||i.pathCache.has(e)){t();return}i.getFilenamesInDir(n,(e=>{if(e.indexOf(o)===-1){let i="!nonexistent";for(let t=0;t<e.length;t+=1){if(e[t].toLowerCase()===o.toLowerCase()){i=`\`${e[t]}\`.`;break}}t(i);return}i.fileExistsWithCase(n,(s=>{if(!s){i.pathCache.set(n,e)}t(s)}))}))};CaseSensitivePathsPlugin.prototype.primeCache=function(e){if(this.primed){e();return}const t=this;const i=s.resolve();t.getFilenamesInDir(i,(s=>{t.pathCache.set(i,s);t.primed=true;e()}))};CaseSensitivePathsPlugin.prototype.apply=function(e){this.compiler=e;const onDone=()=>{if(this.options.debug){this.logger.log("[CaseSensitivePathsPlugin] Total filesystem reads:",this.fsOperations)}this.reset()};const checkFile=(e,t,i)=>{this.fileExistsWithCase(e,(s=>{if(s){if(s==="!nonexistent"){if(t.createData)i(null);else i(null,t)}else{i(new Error(`[CaseSensitivePathsPlugin] \`${e}\` does not match the corresponding path on disk ${s}`))}}else if(t.createData){i(null)}else{i(null,t)}}))};const cleanupPath=e=>e.split("?")[0].replace("\0#","#");const onAfterResolve=(e,t)=>{this.primeCache((()=>{let i=cleanupPath((e.createData||e).resource);i=i.normalize?i.normalize("NFC"):i;checkFile(i,e,t)}))};if(e.hooks){e.hooks.done.tap("CaseSensitivePathsPlugin",onDone);if(this.options.useBeforeEmitHook){if(this.options.debug){this.logger.log("[CaseSensitivePathsPlugin] Using the hook for before emit.")}e.hooks.emit.tapAsync("CaseSensitivePathsPlugin",((e,t)=>{let i=0;const s=[];this.primeCache((()=>{e.fileDependencies.forEach((n=>{checkFile(n,n,(n=>{i+=1;if(n){s.push(n)}if(i===e.fileDependencies.size){if(s.length){Array.prototype.push.apply(e.errors,s)}t()}}))}))}))}))}else{e.hooks.normalModuleFactory.tap("CaseSensitivePathsPlugin",(e=>{e.hooks.afterResolve.tapAsync("CaseSensitivePathsPlugin",onAfterResolve)}))}}else{e.plugin("done",onDone);e.plugin("normal-module-factory",(e=>{e.plugin("after-resolve",onAfterResolve)}))}};e.exports=CaseSensitivePathsPlugin},622:e=>{e.exports=require("path")}};var t={};function __nccwpck_require__(i){var s=t[i];if(s!==undefined){return s.exports}var n=t[i]={exports:{}};var o=true;try{e[i](n,n.exports,__nccwpck_require__);o=false}finally{if(o)delete t[i]}return n.exports}if(typeof __nccwpck_require__!=="undefined")__nccwpck_require__.ab=__dirname+"/";var i=__nccwpck_require__(973);module.exports=i})();